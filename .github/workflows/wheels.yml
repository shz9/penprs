name: Wheels

on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - main
  release:
    types:
      - published

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        # macos-13 is an intel runner, macos-14 is Apple Silicon
        # We'll skip building wheels for windows (windows-latest) for now.
        # There are issues to figure out regarding dependency management.
        os: [ubuntu-latest, macos-13, macos-14]
    env:
      # ---------- Linux (manylinux_2_28 + dnf) ----------
      CIBW_MANYLINUX_X86_64_IMAGE: "quay.io/pypa/manylinux_2_28_x86_64"
      CIBW_BEFORE_BUILD_LINUX: "dnf -y install openblas-devel pkgconf-pkg-config"
      # include /usr/lib/pkgconfig as well
      CIBW_ENVIRONMENT_LINUX: "PKG_CONFIG_PATH=/usr/lib64/pkgconfig:/usr/lib/pkgconfig:/usr/share/pkgconfig"

      # ---------- macOS (brew OpenBLAS + pkg-config) ----------
      CIBW_BEFORE_BUILD_MACOS: "brew update && brew install openblas pkg-config || true"
      CIBW_ENVIRONMENT_MACOS: "PKG_CONFIG_PATH=/usr/local/opt/openblas/lib/pkgconfig:/opt/homebrew/opt/openblas/lib/pkgconfig:/usr/local/lib/pkgconfig:/opt/homebrew/lib/pkgconfig"
      CIBW_SKIP: "cp38-* pp* cp36-* *-musllinux_* *win32 *_i686 *_s390x"

    steps:
      - uses: actions/checkout@v4

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.17.0

      - uses: actions/upload-artifact@v4
        with:
          name: cibw-wheels-${{ matrix.os }}-${{ strategy.job-index }}
          path: ./wheelhouse/*.whl

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        name: Install Python
        with:
          python-version: '3.11'

      - name: Build sdist
        run: |
          python -m pip install --user pipx
          python -m pipx ensurepath
          python -m pipx run build --sdist

      - name: test install
        run: | 
          python -m pip install --upgrade pip
          python -m pip install dist/penprs*.tar.gz
          penprs_fit -h

      - uses: actions/upload-artifact@v4
        with:
          name: cibw-sdist
          path: dist/*.tar.gz

  upload_pypi:
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    environment: pypi
    permissions:
      id-token: write
    if: github.event_name == 'release' && github.event.action == 'published'
    # or, alternatively, upload to PyPI on every tag starting with 'v' (remove on: release above to use this)
    # if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    steps:
      - uses: actions/download-artifact@v4
        with:
          # unpacks all CIBW artifacts into dist/
          pattern: cibw-*
          path: dist
          merge-multiple: true

      - uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
          # To test: repository-url: https://test.pypi.org/legacy/